# 서버 port 변경
server.port = 8080

# JDBC 연동 (띄어쓰기도 포함되니 주의)
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
spring.datasource.username=root
spring.datasource.password=1234

# 전체 로깅
# logging.level.root = debug

# 로그 설정
# 레벨 : debug < info < warn < error
logging.level.example.d10.controller = debug

# 로그 파일 처리 설정 (프로젝트 이하 경로)
logging.file.name = logs/app.log

# 로그 파일 설정/옵션
# 최대 파일 크기
logging.logback.rollingpolicy.max-file-size = 1MB
# 최대 파일 개수
logging.logback.rollingpolicy.max-history = 10

# 프레임워크 내부 로그 줄이기 (운영 단계에서 warn 이상만 출력)
spring.main.log-startup-info = false
logging.level.org.springframework.boot.web = warn
logging.level.org.springframework.boot.web.embedded.tomcat = warn
logging.level.org.apache.catalina = warn
logging.level.org.apache.coyote = warn
logging.level.org.apache.web = warn

# 로그 형식 설정
# %msg : 로그 메세지, %d{y M d H m s} : 날짜/시간
# %level : 레벨, logger : 클래스/경로
logging.pattern.file = [%d{yyyy-MM-dd HH:mm:ss}] %msg %n
logging.pattern.console = [%d{yyyy-MM-dd HH:mm:ss}] %level %logger %msg %n

# 서버 실행 시 SQL 파일 실행 (개발 단계)
# always, never
spring.sql.init.mode = always
# schema.sql : DDL, data.sql : DML (데이터베이스 생성/삭제 불가능, 직접 해야 함)
# drop table 필요, 참조 테이블 (fk) 먼저 삭제해야 함
# classpath : 프로젝트 내 resources 폴더
spring.sql.init.schema-locations=classpath:/sql/schema.sql
spring.sql.init.data-locations=classpath:/sql/data.sql

# myBatis 설정 (@Annotation, XML)
# Mapper XML 파일 경로 지정
mybatis.mapper-locations=classpath:/mappers/*.xml

# redis 연동
spring.data.redis.host=localhost
spring.data.redis.port=6379